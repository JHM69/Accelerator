package org.jhm69.battle_of_quiz.viewmodel;import android.app.Application;import androidx.annotation.NonNull;import androidx.lifecycle.AndroidViewModel;import androidx.lifecycle.LiveData;import org.jhm69.battle_of_quiz.repository.ResultRepository;import org.jhm69.battle_of_quiz.ui.activities.quiz.Result;import java.util.List;public class ResultViewModel extends AndroidViewModel {    public final LiveData<List<Result>> results;    final ResultRepository repository;    public ResultViewModel(@NonNull Application application) {        super(application);        repository = new ResultRepository(application);        results = repository.getAllNotes();    }    public void insert(Result result) {        repository.insert(result);    }    public LiveData<List<Result>> getInvites() {        return repository.getAllInvites();    }    public LiveData<List<Result>> getCompleted() {        return repository.getAllCompleted();    }    public LiveData<List<Result>> getPending() {        return repository.getAllPending();    }    public LiveData<List<Result>> getMyPending() {        return repository.getAllMyPending();    }    public LiveData<List<Result>> getMyCompleted() {        return repository.getAllMyCompleted();    }    public boolean resultExists(String id) {        return repository.resultExists(id);    }    public boolean resultExistsForSecondPlayer(String id) {        return repository.resultExistsForSecondPlayer(id);    }    public void update(Result result) {        repository.update(result);    }    public void delete(Result result) {        repository.delete(result);    }    public Result getResult(String battleIdNew) {        return repository.getResult(battleIdNew);    }}