package org.jhm69.battle_of_quiz.ui.fragment;import android.annotation.SuppressLint;import android.content.Context;import android.content.Intent;import android.content.SharedPreferences;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.RadioButton;import android.widget.RadioGroup;import androidx.annotation.Nullable;import com.google.android.material.bottomsheet.BottomSheetDialogFragment;import org.jhm69.battle_of_quiz.R;import org.jhm69.battle_of_quiz.ui.activities.MainActivity;public class ThemeBottomSheetDialog extends BottomSheetDialogFragment {    public ThemeBottomSheetDialog() {    }    @SuppressLint({"UseCompatLoadingForDrawables", "SimpleDateFormat"})    @Override    public View onCreateView(LayoutInflater inflater, @Nullable            ViewGroup container, @Nullable Bundle savedInstanceState) {        View v = inflater.inflate(R.layout.choose_theme,                container, false);        SharedPreferences sharedPreferences = requireContext().getSharedPreferences("Theme", Context.MODE_PRIVATE);        String themeName = sharedPreferences.getString("ThemeName", "Default");        RadioGroup group1 = v.findViewById(R.id.group);        RadioButton defaultTheme = v.findViewById(R.id.defaultTheme);        RadioButton darkTheme = v.findViewById(R.id.tealTheme);        RadioButton pinkTheme = v.findViewById(R.id.pinkTheme);        RadioButton violeteTheme = v.findViewById(R.id.violeteTheme);        RadioButton dark = v.findViewById(R.id.darkTheme);        RadioButton delRio = v.findViewById(R.id.DelRio);        RadioButton lyrnch = v.findViewById(R.id.lynch);        if (themeName.equalsIgnoreCase("TealTheme")) {            darkTheme.toggle();        } else if (themeName.equalsIgnoreCase("VioleteTheme")) {            violeteTheme.toggle();        } else if (themeName.equalsIgnoreCase("PinkTheme")) {            pinkTheme.toggle();        } else if (themeName.equalsIgnoreCase("DelRio")) {            delRio.toggle();        } else if (themeName.equalsIgnoreCase("Lynch")) {            lyrnch.toggle();        } else if (themeName.equalsIgnoreCase("DarkTheme")) {            dark.toggle();        } else {            defaultTheme.toggle();        }        group1.setOnCheckedChangeListener((group, checkedId) -> {            if (checkedId == R.id.defaultTheme) {                setTheme("Default");            } else if (checkedId == R.id.tealTheme) {                setTheme("TealTheme");            } else if (checkedId == R.id.pinkTheme) {                setTheme("PinkTheme");            } else if (checkedId == R.id.violeteTheme) {                setTheme("VioleteTheme");            } else if (checkedId == R.id.DelRio) {                setTheme("DelRio");            } else if (checkedId == R.id.lynch) {                setTheme("Lynch");            } else if (checkedId == R.id.darkTheme) {                setTheme("DarkTheme");            }        });        return v;    }    public void setTheme(String name) {        SharedPreferences preferences = requireContext().getSharedPreferences("Theme", Context.MODE_PRIVATE);        SharedPreferences.Editor editor = preferences.edit();        editor.putString("ThemeName", name);        editor.apply();        requireActivity().finish();        startActivity(new Intent(getContext(), MainActivity.class));    }}